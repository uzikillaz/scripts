local Players = game:GetService("Players")

local RunService = game:GetService("RunService")

game.Workspace.FallenPartsDestroyHeight = 0/0



local orbitRadius = 3

local headOffset = 2

local orbitSpeed = 2

local pulledAnvils = {} 

local orbitConnections = {}

local standardVelocity = -9e37 

local akillTargets = {}

local whitelist = {}

local trackedPlayerIDs = {}

local currentTargetIndex = 1

local akillLoopConnection

local isPullActive = false

local isArcMode = false

local orbitHeight = 0



local function setupAnvil(anvil)

    anvil.Anchored = false

    anvil.CanCollide = false

    anvil.CustomPhysicalProperties = PhysicalProperties.new(0, 0, 0, 0, 0)

end



local function startOrbit(anvil)

    setupAnvil(anvil)

    pulledAnvils[anvil] = true

    local angle = 0

    local anvilConnection

    anvilConnection = RunService.Heartbeat:Connect(function()

        if pulledAnvils[anvil] then

            angle = angle + orbitSpeed

            local rootPartPosition = Players.LocalPlayer.Character.HumanoidRootPart.Position

            anvil.Position = rootPartPosition + Vector3.new(

                math.cos(math.rad(angle)) * orbitRadius,

                headOffset,

                math.sin(math.rad(angle)) * orbitRadius

            )

            anvil.CFrame = CFrame.new(anvil.Position, rootPartPosition)

            anvil.Velocity = (anvil.Position - rootPartPosition).unit * standardVelocity

        else

            anvilConnection:Disconnect()

        end

    end)

    table.insert(orbitConnections, anvilConnection)

end



local function findAllAnvils()

    for _, v in pairs(workspace:GetChildren()) do

        if v:IsA("BasePart") and v.Name == 'Anvil' and v:FindFirstChild('Script') and 

           v.Script:FindFirstChild('Value') and v.Script.Value.Value == Players.LocalPlayer then

            startOrbit(v)

        end

    end

end



local function onCharacterAdded(newCharacter)

    findAllAnvils()

end



Players.LocalPlayer.CharacterAdded:Connect(onCharacterAdded)



local function onChildAdded(child)

    if child:IsA("BasePart") and child.Name == "Anvil" and child:FindFirstChild('Script') and 

       child.Script:FindFirstChild('Value') and child.Script.Value.Value == Players.LocalPlayer then

        startOrbit(child)

    end

end



workspace.ChildAdded:Connect(onChildAdded)



coroutine.wrap(function()

    while true do

        findAllAnvils()

        task.wait(1)

    end

end)()



local function stopTargetingLoops()

    if akillLoopConnection then

        akillLoopConnection:Disconnect()

        akillLoopConnection = nil

    end

    akillTargets = {}

    currentTargetIndex = 1

end



local function handleAkill()

    if #akillTargets > 0 then

        local targetPlayer = akillTargets[currentTargetIndex]

        if targetPlayer and targetPlayer.Character and 

           targetPlayer.Character:FindFirstChild("HumanoidRootPart") then

            local targetPosition = targetPlayer.Character.HumanoidRootPart.Position

            -- Loop through all pulled anvils

            for anvil in pairs(pulledAnvils) do

                if anvil:IsA("MeshPart") and anvil.Name == "Anvil" and not 

                   whitelist[targetPlayer.Name] then

                    -- Set the anvil's position to match the target's HumanoidRootPart position

                    anvil.Position = targetPosition

                end

            end

            -- Keep targeting the player while the akill loop is active

            akillLoopConnection = RunService.Heartbeat:Connect(function()

                if #akillTargets > 0 then

                    local currentTarget = akillTargets[currentTargetIndex]

                    if currentTarget and currentTarget.Character and 

                       currentTarget.Character:FindFirstChild("HumanoidRootPart") then

                        local currentTargetPosition = currentTarget.Character.HumanoidRootPart.Position

                        -- Update each anvil to match the current target's HumanoidRootPart position

                        for anvil in pairs(pulledAnvils) do

                            if anvil:IsA("MeshPart") and anvil.Name == "Anvil" and not 

                               whitelist[currentTarget.Name] then

                                anvil.Position = currentTargetPosition

                            end

                        end

                    end

                    -- Update the target index to loop through akillTargets

                    currentTargetIndex = currentTargetIndex % #akillTargets + 1

                end

                wait(0.15) -- Slight delay to avoid performance issues

            end)

        end

    end

end



local function onPlayerAdded(player)

    player.CharacterAdded:Connect(function(character)

        wait(1)

        if trackedPlayerIDs[player.UserId] then

            akillTargets[#akillTargets + 1] = player

            handleAkill()

        end

    end)

end



local function onChatMessage(message)

    local args = string.split(message, " ")

    local command = args[1]

    if command == "+start" then

        isPullActive = true

    elseif command == "+stop" then

        isPullActive = false

        stopTargetingLoops()

    elseif command == "+arc" then

        isArcMode = true

        stopTargetingLoops()

    elseif command == ".-arc" then

        isArcMode = false

        isPullActive = true

    elseif command == "+rc" then

        stopTargetingLoops()

        isPullActive = true

        resetAnvilOrbits()

        local closestPlayer = nil

        local closestDistance = math.huge

        for _, player in pairs(Players:GetPlayers()) do

            if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then

                local distance = (Players.LocalPlayer.Character.HumanoidRootPart.Position - 

                                 player.Character.HumanoidRootPart.Position).magnitude

                if (player.DisplayName:lower():find(args[2]:lower()) or 

                    player.Name:lower():find(args[2]:lower())) and distance < closestDistance then

                    closestDistance = distance

                    closestPlayer = player

                end

            end

        end

        if closestPlayer then

            whitelist[closestPlayer.Name] = true

        end

    elseif command == "+aka" then

        akillLoopConnection = RunService.Heartbeat:Connect(function()

            for anvil in pairs(pulledAnvils) do

                if anvil:IsA("MeshPart") and anvil.Name == "Anvil" then

                    setupAnvil(anvil)

                    local targetPlayer = Players:GetPlayers()[math.random(1, #Players:GetPlayers())]

                    if targetPlayer.Character and 

                       targetPlayer.Character:FindFirstChild("HumanoidRootPart") and not 

                       whitelist[targetPlayer.Name] then

                        anvil.Position = targetPlayer.Character.HumanoidRootPart.Position

                    end

                end

            end

            wait(0.15)

        end)

    elseif command == "+akill" and args[2] then

        local targetName = args[2]:lower()

        for _, player in pairs(Players:GetPlayers()) do

            if (player.Name:lower():find(targetName) or player.DisplayName:lower():find(targetName)) 

               and player.Character and player.Character:FindFirstChild("HumanoidRootPart") and 

               not whitelist[player.Name] then

                table.insert(akillTargets, player)

                trackedPlayerIDs[player.UserId] = true

            end

        end

        if #akillTargets > 0 then

            handleAkill()

        end

    elseif command == "+spinspeed" and args[2] then

        local newSpeed = tonumber(args[2])

        if newSpeed then

            orbitSpeed = newSpeed

        end

    elseif command == "+spinradius" and args[2] then

        local newRadius = tonumber(args[2])

        if newRadius then

            orbitRadius = newRadius

        end

    elseif command == "+spinheight" and args[2] then

        local newHeight = tonumber(args[2])

        if newHeight then

            orbitHeight = newHeight

        end

    elseif command == "+wl" and args[2] then

        local targetName = args[2]:lower()

        for _, player in pairs(Players:GetPlayers()) do

            if (player.Name:lower():find(targetName) or player.DisplayName:lower():find(targetName)) then

                whitelist[player.Name] = true

                return

            end

        end

    end

end



Players.LocalPlayer.Chatted:Connect(onChatMessage)
